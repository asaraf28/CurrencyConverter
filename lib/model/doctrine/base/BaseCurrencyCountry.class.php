<?php

/**
 * BaseCurrencyCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property Currency $Currency
 * 
 * @method integer         getId()       Returns the current record's "id" value
 * @method string          getCode()     Returns the current record's "code" value
 * @method string          getName()     Returns the current record's "name" value
 * @method Currency        getCurrency() Returns the current record's "Currency" value
 * @method CurrencyCountry setId()       Sets the current record's "id" value
 * @method CurrencyCountry setCode()     Sets the current record's "code" value
 * @method CurrencyCountry setName()     Sets the current record's "name" value
 * @method CurrencyCountry setCurrency() Sets the current record's "Currency" value
 * 
 * @package    currency-converter
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCurrencyCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('currency_country');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('code', 'string', 3, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('orderBy', 'name ASC');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Currency', array(
             'local' => 'code',
             'foreign' => 'code'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}