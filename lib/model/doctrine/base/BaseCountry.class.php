<?php

/**
 * BaseCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Currencies
 * @property Doctrine_Collection $CurrencyCountry
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method Doctrine_Collection getCurrencies()      Returns the current record's "Currencies" collection
 * @method Doctrine_Collection getCurrencyCountry() Returns the current record's "CurrencyCountry" collection
 * @method Country             setId()              Sets the current record's "id" value
 * @method Country             setName()            Sets the current record's "name" value
 * @method Country             setCurrencies()      Sets the current record's "Currencies" collection
 * @method Country             setCurrencyCountry() Sets the current record's "CurrencyCountry" collection
 * 
 * @package    currency-converter
 * @subpackage model
 * @author     Steve Lacey
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('country');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 11,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('orderBy', 'name ASC');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Currency as Currencies', array(
             'refClass' => 'CurrencyCountry',
             'local' => 'country_id',
             'foreign' => 'currency_code'));

        $this->hasMany('CurrencyCountry', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}